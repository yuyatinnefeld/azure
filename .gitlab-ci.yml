variables:
  AZURE_LOCATION: germanywestcentral
  AZURE_STORAGE_CONTAINER_NAME: tfstate
  AZURE_STORAGE_TF_STATEFILE: yuyastatefiledev
  TERRAFORM_DIR: iac

stages:
  - initial-setup
  - terraform-plan
  - terraform-apply

############################ create statefile bucket ############################

.create-statefile-bucket:
  image: mcr.microsoft.com/azure-cli
  stage: initial-setup
  script:
    - echo "🔍️ Checking if $AZURE_STORAGE_TF_STATEFILE exists"
    - |
      if az storage account show --name $AZURE_STORAGE_TF_STATEFILE --resource-group $AZURE_STORAGE_RESOURCE_GROUP &> /dev/null; then
        echo "✨ $AZURE_STORAGE_TF_STATEFILE already exists"
      else
        echo "🔧 The statefile bucket does not exist. Creating"
        # Create resource group
        az group create --name $AZURE_STORAGE_RESOURCE_GROUP --location $AZURE_LOCATION
        # Create storage account
        az storage account create --name $AZURE_STORAGE_TF_STATEFILE --resource-group $AZURE_STORAGE_RESOURCE_GROUP --location $AZURE_LOCATION --sku Standard_RAGRS --kind StorageV2 --allow-blob-public-access false
        # Create blob container
        az storage container create --name $AZURE_STORAGE_CONTAINER_NAME --account-name $AZURE_STORAGE_TF_STATEFILE
      fi

create-statefile-bucket-dev:
  extends: 
    - .create-statefile-bucket
  before_script:
    - az login --service-principal --username $AZURE_APP_ID_DEV --password $AZURE_SERVICE_PRINCIPAL_PASSWORD_DEV --tenant $AZURE_TENANT_DEV
  variables:
    AZURE_STORAGE_RESOURCE_GROUP: storage-resource-group-dev
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"

############################ show terraform resources ############################

image: 
  name: hashicorp/terraform:latest
  entrypoint:
    - '' # DON'T FORGET SET ENTRYPOINT -> Reason Dockerfile has ENTRYPOINT ["terraform"]

before_script:
  - export TF_VAR_ARM_TENANT_ID=$AZURE_TENANT_DEV
  - export TF_VAR_ARM_SUBSCRIPTION_ID=$AZURE_SUBSCRIPTION_ID_DEV
  - export TF_VAR_ARM_CLIENT_ID=$AZURE_CLIENT_ID_DEV
  - export TF_VAR_ARM_CLIENT_SECRET=$AZURE_CLIENT_SECRET
  - cd $TERRAFORM_DIR
  - terraform init -backend-config="env/dev.tfbackend"

.terraform-plan:
  stage: terraform-plan
  script:
    - terraform plan -var-file=env/dev.tfvars -out=tfplan
  artifacts:
    paths:
      - tfplan

terraform-plan-dev:
  extends: 
    - .terraform-plan

  rules:
    - if: $CI_COMMIT_BRANCH == "develop"


.terraform-apply:
  stage: terraform-apply
  script:
    - terraform apply tfplan

terraform-apply-dev:
  extends: 
    - .terraform-apply
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
